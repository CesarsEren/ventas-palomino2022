
package pe.com.grupopalomino.sistema.boletaje.pagoefectivo.sources;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSCryptoSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSCryptoSoap {


    /**
     * 
     * @param plainText
     * @param publicKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EncryptText", action = "http://tempuri.org/EncryptText")
    @WebResult(name = "EncryptTextResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "EncryptText", targetNamespace = "http://tempuri.org/", className = "org.tempuri.EncryptText")
    @ResponseWrapper(localName = "EncryptTextResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.EncryptTextResponse")
    public String encryptText(
        @WebParam(name = "plainText", targetNamespace = "http://tempuri.org/")
        String plainText,
        @WebParam(name = "publicKey", targetNamespace = "http://tempuri.org/")
        byte[] publicKey);

    /**
     * 
     * @param privateKey
     * @param encryptText
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DecryptText", action = "http://tempuri.org/DecryptText")
    @WebResult(name = "DecryptTextResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "DecryptText", targetNamespace = "http://tempuri.org/", className = "org.tempuri.DecryptText")
    @ResponseWrapper(localName = "DecryptTextResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.DecryptTextResponse")
    public String decryptText(
        @WebParam(name = "encryptText", targetNamespace = "http://tempuri.org/")
        String encryptText,
        @WebParam(name = "privateKey", targetNamespace = "http://tempuri.org/")
        byte[] privateKey);

    /**
     * 
     * @param privateKey
     * @param plainText
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Signer", action = "http://tempuri.org/Signer")
    @WebResult(name = "SignerResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "Signer", targetNamespace = "http://tempuri.org/", className = "org.tempuri.Signer")
    @ResponseWrapper(localName = "SignerResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.SignerResponse")
    public String signer(
        @WebParam(name = "plainText", targetNamespace = "http://tempuri.org/")
        String plainText,
        @WebParam(name = "privateKey", targetNamespace = "http://tempuri.org/")
        byte[] privateKey);

}
